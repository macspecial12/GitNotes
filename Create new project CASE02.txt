NOTE: use GitBash cmd line tool to put these tips to use
- sometimes it may need to be run as Administrator (right click)

Case 2. LOCAL repository exists and has been working [ie staging and commits locally] for some time
    - Create remote, empty repository on GitHub named <projectname>
    - Go to a local repository named <project_name> that has already been initialized
    - Create a link to the remote repo [logicalName/branchName]
    - Push the files to the remote repo

    # launch GitBash
    cd ~/github_<username>/<projectname>    # change dir to the existing project
    # https://help.github.com/articles/adding-a-remote/
    git remote add origin https://github.com/<username>/<project_name>.git # create a remote link
    git push -u origin master               # push the locally committed changes in the current checked out branch to the REMOTE depot
    
    # you will be prompted for username and password
    # once you see this message: Branch master set up to track remote branch master from origin
    
    git branch -r
    # This becomes the defualt context (in this project directory) for fetch [pull] or push
    # Logical name: origin
    # Associated branch: master
    
    git remote -v                           # shows urls used for fetch, push; now you are tracking a LOCAL repo to a REMOTE repo

    # checks - navigate to GitHub and validate files exist in REMOTE repository

