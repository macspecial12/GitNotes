NOTE: use GitBash cmd line tool to put these tips to use
- sometimes it may need to be run as Administrator (right click)

Case 1. Remote, empty repository has been created on GitHub named <projectname>
    - Create a new empty LOCAL repository on the command line
    - Add some files
    - Create a link to the remote repo [logicalName/branchName]
    - Push the files to the remote repo
    
    # launch GitBash
    cd ~/github_<username>          # change dir to default project location for the account of interest
    mkdir <projectname>             # create a folder named <projectname>
    cd <projectname>                # change dir to project folder
    echo "# <projectname>" >> README.md # add a readme file OR touch <filename>, then manually edit
    git init                        # create a LOCAL repo ??do I need to check it out?  
    git add README.md               # add the readme to staging OR git add .
    git status
    git commit -m "commit initial readme"   # commit the staging files
    git status                      # nothing to commit menas dir shows what is already in LOCAL repo
    git commit --amend -m "commit initial README"   # if needed, correct the commit message before pushing to remote

    # FOR SOME REASON NOT NEEDED, init might have created it?
    # https://help.github.com/articles/adding-a-remote/
    # git remote add origin https://github.com/<username/<projectname>.git  # create a remote link

    # CONCEPT: there is no way to list a REMOTE repository
    
    git push -u origin master       # push the locally committed changes in the current checked out branch to the REMOTE depot
    # you will be prompted for username and password
    # once you see this message: Branch master set up to track remote branch master from origin
    
    git branch -r
    # This becomes the defualt context (in this project directory) for fetch [pull] or push
    # Logical name: origin
    # Associated branch: master
    
    git remote -v                   # shows urls used for fetch, push; now you are tracking a LOCAL repo to a REMOTE repo

    # checks - navigate to GitHub and validate files exist in remote repository
    
